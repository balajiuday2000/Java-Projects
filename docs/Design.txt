Design Choices:

1. We made use of packaging to make classes more organized, and hence easier to reuse.
2. We applied Factory pattern, created four factories to generate Accounts, Persons, Stocks, and Transactions under different context.
3. We applied Singleton pattern, there is a single stock market instance in the program, so the stocks will be consistent everywhere.
4. We use exceptions to handle false inputs, giving a wider range of freedom to use different exception handler for the same exception
under different context.


Benefits:

1. Packages make code clear, organized and easy to reuse.
2. Factory pattern separates object creation logic with other logic, so object generation code can be reused.
3. Singleton pattern forces consistency on stock market, no longer need to worry about synchronizing multiple stock markets.
4. Can apply different exception handlers, making code more agile. 
