package com.company.GUI.Manager;

import com.company.Currency.Currency;
import com.company.GUI.MyPage;
import com.company.Persons.Manager;
import com.company.Stock.StockMarket;
import com.company.Transactions.Transaction;
import com.company.Utils.Parser;
import com.company.Utils.Writer;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;

public class PageUpdates implements MyPage {
    private JPanel rootPanel;
    private JLabel lbTitle;
    private JTable tbUpdates;
    private JButton btCancel;

    private List<Transaction> transactions;

    public PageUpdates(Manager manager, Currency currency, StockMarket stockMarket) {
        Parser parser = new Parser();
        Writer writer = new Writer();
        try {
            transactions = parser.parseCumulativeTxn();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        tbUpdates.setModel(new DefaultTableModel(
                null,
                new String[]{"Transaction ID", "Date", "Amount", "Customer ID", "Type"}
        ));
        DefaultTableModel model = (DefaultTableModel) tbUpdates.getModel();
        for (Transaction transaction : transactions) {
            model.addRow(new Object[]{
                    transaction.getId(),
                    transaction.getTimestamp(),
                    transaction.getAmount(),
                    transaction.getPersonId(),
                    transaction.getType()
            });
        }
        try {
            writer.writeCurTimeToReportDate();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        lbTitle = new JLabel();
        lbTitle.setText("View Updates");
        rootPanel.add(lbTitle, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tbUpdates = new JTable();
        scrollPane1.setViewportView(tbUpdates);
        btCancel = new JButton();
        btCancel.setText("Cancel");
        rootPanel.add(btCancel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    @Override
    public JPanel getRootPanel() {
        return rootPanel;
    }
}
