package com.company.GUI.Manager;

import com.company.GUI.PageManager;
import com.company.GUI.MyPage;
import com.company.Transactions.Transaction;
import com.company.Utils.Parser;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.util.List;

/**
 * Class of page for viewing transactions
 */
public class PageTransactionQuery implements MyPage {
    private JPanel rootPanel;
    private JLabel lbTitle;
    private JLabel lbDate;
    private JTextField tfDate;
    private JButton btSearch;
    private JScrollPane sp;
    private JTable tbTransactions;
    private JButton btCancel;

    /**
     * Constructor
     */
    public PageTransactionQuery() {
        tbTransactions.setModel(new DefaultTableModel(
                null,
                new String[]{"Transaction ID", "Date", "Amount", "Customer ID", "Type"}
        ));
        btCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PageManager.backToOldPage();
            }
        });
        btSearch.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Parser parser = new Parser();
                String date1 = tfDate.getText();
                LocalDate date = LocalDate.parse(date1);
                List<Transaction> transactions = parser.parseTxnByDate(date);
                DefaultTableModel model = (DefaultTableModel) tbTransactions.getModel();
                for (Transaction transaction : transactions) {
                    model.addRow(new Object[]{
                            transaction.getId(),
                            transaction.getTimestamp(),
                            transaction.getAmount(),
                            transaction.getPersonId(),
                            transaction.getType()
                    });
                }
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(6, 1, new Insets(0, 0, 0, 0), -1, -1));
        lbTitle = new JLabel();
        lbTitle.setText("Transaction Records");
        rootPanel.add(lbTitle, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lbDate = new JLabel();
        lbDate.setText("Enter date (YYYY-MM-DD):");
        rootPanel.add(lbDate, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfDate = new JTextField();
        rootPanel.add(tfDate, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        btSearch = new JButton();
        btSearch.setText("Search");
        rootPanel.add(btSearch, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sp = new JScrollPane();
        rootPanel.add(sp, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tbTransactions = new JTable();
        sp.setViewportView(tbTransactions);
        btCancel = new JButton();
        btCancel.setText("Cancel");
        rootPanel.add(btCancel, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    /**
     * Method responsible for fetching root panel
     * @return
     */
    @Override
    public JPanel getRootPanel() {
        return rootPanel;
    }
}
